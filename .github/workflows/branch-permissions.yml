name: Branch Permission Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    # Temporarily disabled - uncomment to re-enable
    # branches-ignore: ['**']

jobs:
  check-branch-permissions:
    runs-on: ubuntu-latest
    steps:
      - name: Check branch permissions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          ACTOR="${{ github.actor }}"
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name }}"

          echo "Checking permissions for branch: $BRANCH_NAME"
          echo "PR author: $ACTOR"

          # Check if user is an organization member
          MEMBERSHIP_STATUS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/orgs/$REPO_OWNER/members/$ACTOR" \
            -w "%{http_code}" -o /dev/null)

          # Check if user is a repository collaborator
          COLLABORATOR_STATUS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/collaborators/$ACTOR" \
            -w "%{http_code}" -o /dev/null)

          IS_AUTHORIZED=false
          if [ "$MEMBERSHIP_STATUS" = "204" ]; then
            IS_AUTHORIZED=true
            echo "‚úÖ User $ACTOR is an organization member"
          elif [ "$COLLABORATOR_STATUS" = "204" ]; then
            IS_AUTHORIZED=true
            echo "‚úÖ User $ACTOR is a repository collaborator"
          else
            echo "‚ÑπÔ∏è User $ACTOR is not an organization member or repository collaborator (external contributor)"
          fi          # Check if branch requires org membership
          REQUIRES_ORG_MEMBERSHIP=false
          if [[ $BRANCH_NAME =~ ^feature/ ]] || [[ $BRANCH_NAME =~ ^release/ ]] || [[ $BRANCH_NAME =~ ^chore/ ]] || [[ $BRANCH_NAME =~ ^hotfix/ ]]; then
            REQUIRES_ORG_MEMBERSHIP=true
          fi

          # Validate permissions
          if [ "$REQUIRES_ORG_MEMBERSHIP" = true ] && [ "$IS_AUTHORIZED" = false ]; then
            echo "‚ùå ERROR: Branch '$BRANCH_NAME' can only be created by CometChat organization members or repository collaborators."
            echo ""
            echo "üìã External contributors should use:"
            echo "- fix/ (for bug fixes, typos, broken links)"
            echo "- docs/ (for documentation improvements)"
            echo "- community/ (for examples, guides, general contributions)"
            echo ""
            echo "üîí Organization members can use:"
            echo "- feature/ (for new product features)"
            echo "- release/ (for release preparation)"
            echo "- chore/ (for maintenance tasks, dependency updates)"
            echo "- hotfix/ (for critical production fixes)"
            echo ""
            echo "Please create a new branch with an appropriate prefix."
            exit 1
          else
            echo "‚úÖ Branch permissions validated successfully"
          fi
